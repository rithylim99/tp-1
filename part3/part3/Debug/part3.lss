
part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000228  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000900  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000b88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a6  00000000  00000000  00001212  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000015b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000377  00000000  00000000  000015dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000288  00000000  00000000  00001953  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001bdb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 cf 00 	jmp	0x19e	; 0x19e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRD = 0b11111100;
  80:	8c ef       	ldi	r24, 0xFC	; 252
  82:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b00000001;
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	84 b9       	out	0x04, r24	; 4
    /* Replace with your application code */
    while (1) 
    {
		//number zero
		PORTD = 0b11111100;
  88:	9c ef       	ldi	r25, 0xFC	; 252
  8a:	9b b9       	out	0x0b, r25	; 11
		PORTB &= 0b00000000;
  8c:	85 b1       	in	r24, 0x05	; 5
  8e:	15 b8       	out	0x05, r1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  90:	2f ef       	ldi	r18, 0xFF	; 255
  92:	33 ed       	ldi	r19, 0xD3	; 211
  94:	80 e3       	ldi	r24, 0x30	; 48
  96:	21 50       	subi	r18, 0x01	; 1
  98:	30 40       	sbci	r19, 0x00	; 0
  9a:	80 40       	sbci	r24, 0x00	; 0
  9c:	e1 f7       	brne	.-8      	; 0x96 <main+0x16>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <main+0x20>
  a0:	00 00       	nop
		_delay_ms(1000);
		//number one
		PORTD = 0b00011000;
  a2:	88 e1       	ldi	r24, 0x18	; 24
  a4:	8b b9       	out	0x0b, r24	; 11
		PORTB &= 0b00000000;
  a6:	85 b1       	in	r24, 0x05	; 5
  a8:	15 b8       	out	0x05, r1	; 5
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	33 ed       	ldi	r19, 0xD3	; 211
  ae:	80 e3       	ldi	r24, 0x30	; 48
  b0:	21 50       	subi	r18, 0x01	; 1
  b2:	30 40       	sbci	r19, 0x00	; 0
  b4:	80 40       	sbci	r24, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x30>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x3a>
  ba:	00 00       	nop
		_delay_ms(1000);
		//number two
		PORTD = 0b01101100;
  bc:	8c e6       	ldi	r24, 0x6C	; 108
  be:	8b b9       	out	0x0b, r24	; 11
		PORTB |= 0b00000001;
  c0:	85 b1       	in	r24, 0x05	; 5
  c2:	81 60       	ori	r24, 0x01	; 1
  c4:	85 b9       	out	0x05, r24	; 5
  c6:	2f ef       	ldi	r18, 0xFF	; 255
  c8:	33 ed       	ldi	r19, 0xD3	; 211
  ca:	80 e3       	ldi	r24, 0x30	; 48
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	30 40       	sbci	r19, 0x00	; 0
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x4c>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x56>
  d6:	00 00       	nop
		_delay_ms(1000);
		//number three
		PORTD = 0b00111100;
  d8:	8c e3       	ldi	r24, 0x3C	; 60
  da:	8b b9       	out	0x0b, r24	; 11
		PORTB |= 0b00000001;
  dc:	85 b1       	in	r24, 0x05	; 5
  de:	81 60       	ori	r24, 0x01	; 1
  e0:	85 b9       	out	0x05, r24	; 5
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	33 ed       	ldi	r19, 0xD3	; 211
  e6:	80 e3       	ldi	r24, 0x30	; 48
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	30 40       	sbci	r19, 0x00	; 0
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x68>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x72>
  f2:	00 00       	nop
		_delay_ms(1000);
		//number four
		PORTD = 0b10011000;
  f4:	88 e9       	ldi	r24, 0x98	; 152
  f6:	8b b9       	out	0x0b, r24	; 11
		PORTB |= 0b00000001;
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	81 60       	ori	r24, 0x01	; 1
  fc:	85 b9       	out	0x05, r24	; 5
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	33 ed       	ldi	r19, 0xD3	; 211
 102:	80 e3       	ldi	r24, 0x30	; 48
 104:	21 50       	subi	r18, 0x01	; 1
 106:	30 40       	sbci	r19, 0x00	; 0
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x84>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x8e>
 10e:	00 00       	nop
		_delay_ms(1000);
		//number five
		PORTD = 0b10110100;
 110:	84 eb       	ldi	r24, 0xB4	; 180
 112:	8b b9       	out	0x0b, r24	; 11
		PORTB |= 0b00000001;
 114:	85 b1       	in	r24, 0x05	; 5
 116:	81 60       	ori	r24, 0x01	; 1
 118:	85 b9       	out	0x05, r24	; 5
 11a:	2f ef       	ldi	r18, 0xFF	; 255
 11c:	33 ed       	ldi	r19, 0xD3	; 211
 11e:	80 e3       	ldi	r24, 0x30	; 48
 120:	21 50       	subi	r18, 0x01	; 1
 122:	30 40       	sbci	r19, 0x00	; 0
 124:	80 40       	sbci	r24, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <main+0xa0>
 128:	00 c0       	rjmp	.+0      	; 0x12a <main+0xaa>
 12a:	00 00       	nop
		_delay_ms(1000);
		//number six
		PORTD = 0b11110100;
 12c:	84 ef       	ldi	r24, 0xF4	; 244
 12e:	8b b9       	out	0x0b, r24	; 11
		PORTB |= 0b00000001;
 130:	85 b1       	in	r24, 0x05	; 5
 132:	81 60       	ori	r24, 0x01	; 1
 134:	85 b9       	out	0x05, r24	; 5
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	33 ed       	ldi	r19, 0xD3	; 211
 13a:	80 e3       	ldi	r24, 0x30	; 48
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	30 40       	sbci	r19, 0x00	; 0
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0xbc>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0xc6>
 146:	00 00       	nop
		_delay_ms(1000);
		//number seven
		PORTD = 0b00011100;
 148:	8c e1       	ldi	r24, 0x1C	; 28
 14a:	8b b9       	out	0x0b, r24	; 11
		PORTB ^= 0b00000001;
 14c:	25 b1       	in	r18, 0x05	; 5
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	82 27       	eor	r24, r18
 152:	85 b9       	out	0x05, r24	; 5
 154:	2f ef       	ldi	r18, 0xFF	; 255
 156:	33 ed       	ldi	r19, 0xD3	; 211
 158:	80 e3       	ldi	r24, 0x30	; 48
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	30 40       	sbci	r19, 0x00	; 0
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <main+0xda>
 162:	00 c0       	rjmp	.+0      	; 0x164 <main+0xe4>
 164:	00 00       	nop
		_delay_ms(1000);
		//number eight
		PORTD = 0b11111100;
 166:	9b b9       	out	0x0b, r25	; 11
		PORTB |= 0b00000001;
 168:	85 b1       	in	r24, 0x05	; 5
 16a:	81 60       	ori	r24, 0x01	; 1
 16c:	85 b9       	out	0x05, r24	; 5
 16e:	9f ef       	ldi	r25, 0xFF	; 255
 170:	23 ed       	ldi	r18, 0xD3	; 211
 172:	30 e3       	ldi	r19, 0x30	; 48
 174:	91 50       	subi	r25, 0x01	; 1
 176:	20 40       	sbci	r18, 0x00	; 0
 178:	30 40       	sbci	r19, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <main+0xf4>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <main+0xfe>
 17e:	00 00       	nop
		_delay_ms(1000);
		//number nine
		PORTD = 0b10111100;
 180:	8c eb       	ldi	r24, 0xBC	; 188
 182:	8b b9       	out	0x0b, r24	; 11
		PORTB |= 0b00000001;
 184:	85 b1       	in	r24, 0x05	; 5
 186:	81 60       	ori	r24, 0x01	; 1
 188:	85 b9       	out	0x05, r24	; 5
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	93 ed       	ldi	r25, 0xD3	; 211
 18e:	20 e3       	ldi	r18, 0x30	; 48
 190:	81 50       	subi	r24, 0x01	; 1
 192:	90 40       	sbci	r25, 0x00	; 0
 194:	20 40       	sbci	r18, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0x110>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x11a>
 19a:	00 00       	nop
 19c:	75 cf       	rjmp	.-278    	; 0x88 <main+0x8>

0000019e <_exit>:
 19e:	f8 94       	cli

000001a0 <__stop_program>:
 1a0:	ff cf       	rjmp	.-2      	; 0x1a0 <__stop_program>
