
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000128  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d6  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000659  00000000  00000000  000008ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029d  00000000  00000000  00000f43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000011e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034e  00000000  00000000  00001214  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000134  00000000  00000000  00001562  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001696  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 89 00 	call	0x112	; 0x112 <main>
  78:	0c 94 92 00 	jmp	0x124	; 0x124 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <seven_segment>:
    seven_segment(8);
  }
}
void seven_segment(int y)
{
	if (y==0)
  80:	00 97       	sbiw	r24, 0x00	; 0
  82:	21 f4       	brne	.+8      	; 0x8c <seven_segment+0xc>
	{
		PORTD = 0b11111100;
  84:	8c ef       	ldi	r24, 0xFC	; 252
  86:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000000;
  88:	15 b8       	out	0x05, r1	; 5
  8a:	08 95       	ret
	}
	else if (y==1)
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	91 05       	cpc	r25, r1
  90:	19 f4       	brne	.+6      	; 0x98 <seven_segment+0x18>
	{
		PORTD = 0b00011000;
  92:	88 e1       	ldi	r24, 0x18	; 24
  94:	8b b9       	out	0x0b, r24	; 11
  96:	08 95       	ret
	}
	else if (y==2)
  98:	82 30       	cpi	r24, 0x02	; 2
  9a:	91 05       	cpc	r25, r1
  9c:	29 f4       	brne	.+10     	; 0xa8 <seven_segment+0x28>
	{
		PORTD = 0b01101100;
  9e:	8c e6       	ldi	r24, 0x6C	; 108
  a0:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
  a2:	81 e0       	ldi	r24, 0x01	; 1
  a4:	85 b9       	out	0x05, r24	; 5
  a6:	08 95       	ret
	}
	else if (y==3)
  a8:	83 30       	cpi	r24, 0x03	; 3
  aa:	91 05       	cpc	r25, r1
  ac:	29 f4       	brne	.+10     	; 0xb8 <seven_segment+0x38>
	{
		PORTD = 0b00111100;
  ae:	8c e3       	ldi	r24, 0x3C	; 60
  b0:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	85 b9       	out	0x05, r24	; 5
  b6:	08 95       	ret
	}
	else if (y==4)
  b8:	84 30       	cpi	r24, 0x04	; 4
  ba:	91 05       	cpc	r25, r1
  bc:	29 f4       	brne	.+10     	; 0xc8 <seven_segment+0x48>
	{
		PORTD = 0b10011000;
  be:	88 e9       	ldi	r24, 0x98	; 152
  c0:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	85 b9       	out	0x05, r24	; 5
  c6:	08 95       	ret
	}
	else if (y==5)
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	29 f4       	brne	.+10     	; 0xd8 <seven_segment+0x58>
	{
		PORTD = 0b10110100;
  ce:	84 eb       	ldi	r24, 0xB4	; 180
  d0:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	85 b9       	out	0x05, r24	; 5
  d6:	08 95       	ret
	}
	else if (y==6)
  d8:	86 30       	cpi	r24, 0x06	; 6
  da:	91 05       	cpc	r25, r1
  dc:	29 f4       	brne	.+10     	; 0xe8 <seven_segment+0x68>
	{
		PORTD = 0b11110100;
  de:	84 ef       	ldi	r24, 0xF4	; 244
  e0:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	85 b9       	out	0x05, r24	; 5
  e6:	08 95       	ret
	}
	else if (y==7)
  e8:	87 30       	cpi	r24, 0x07	; 7
  ea:	91 05       	cpc	r25, r1
  ec:	19 f4       	brne	.+6      	; 0xf4 <seven_segment+0x74>
	{
		PORTD = 0b00011100;
  ee:	8c e1       	ldi	r24, 0x1C	; 28
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	08 95       	ret
	}
	else if (y==8)
  f4:	88 30       	cpi	r24, 0x08	; 8
  f6:	91 05       	cpc	r25, r1
  f8:	29 f4       	brne	.+10     	; 0x104 <seven_segment+0x84>
	{
		PORTD = 0b11111100;
  fa:	8c ef       	ldi	r24, 0xFC	; 252
  fc:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	85 b9       	out	0x05, r24	; 5
 102:	08 95       	ret
	}
	else if (y==9)
 104:	09 97       	sbiw	r24, 0x09	; 9
 106:	21 f4       	brne	.+8      	; 0x110 <seven_segment+0x90>
	{
		PORTD = 0b10111100;
 108:	8c eb       	ldi	r24, 0xBC	; 188
 10a:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	85 b9       	out	0x05, r24	; 5
 110:	08 95       	ret

00000112 <main>:
#include <util/delay.h>


int main(void)
{
  DDRD = 0b11111100;
 112:	8c ef       	ldi	r24, 0xFC	; 252
 114:	8a b9       	out	0x0a, r24	; 10
  DDRB = 0b00000001;
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	84 b9       	out	0x04, r24	; 4
  /* Replace with your application code */
  while (1)
  {
    seven_segment(8);
 11a:	88 e0       	ldi	r24, 0x08	; 8
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	0e 94 40 00 	call	0x80	; 0x80 <seven_segment>
 122:	fb cf       	rjmp	.-10     	; 0x11a <main+0x8>

00000124 <_exit>:
 124:	f8 94       	cli

00000126 <__stop_program>:
 126:	ff cf       	rjmp	.-2      	; 0x126 <__stop_program>
