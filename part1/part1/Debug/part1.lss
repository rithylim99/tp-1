
part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000172  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000011e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000172  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000081c  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030c  00000000  00000000  000010aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000377  00000000  00000000  000013dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000168  00000000  00000000  00001753  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 8d 00 	jmp	0x11a	; 0x11a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRD = 0b11111100;
  80:	8c ef       	ldi	r24, 0xFC	; 252
  82:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b00000001;
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	84 b9       	out	0x04, r24	; 4
    /* Replace with your application code */
    while (1) 
    {
		//number zero
		PORTD = 0b11111100;
  88:	8c ef       	ldi	r24, 0xFC	; 252
  8a:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000000;
  8c:	15 b8       	out	0x05, r1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8e:	2f ef       	ldi	r18, 0xFF	; 255
  90:	39 e6       	ldi	r19, 0x69	; 105
  92:	88 e1       	ldi	r24, 0x18	; 24
  94:	21 50       	subi	r18, 0x01	; 1
  96:	30 40       	sbci	r19, 0x00	; 0
  98:	80 40       	sbci	r24, 0x00	; 0
  9a:	e1 f7       	brne	.-8      	; 0x94 <main+0x14>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <main+0x1e>
  9e:	00 00       	nop
		_delay_ms(500);
		//number one
		PORTD = 0b00011000;
  a0:	88 e1       	ldi	r24, 0x18	; 24
  a2:	8b b9       	out	0x0b, r24	; 11
  a4:	9f ef       	ldi	r25, 0xFF	; 255
  a6:	29 e6       	ldi	r18, 0x69	; 105
  a8:	38 e1       	ldi	r19, 0x18	; 24
  aa:	91 50       	subi	r25, 0x01	; 1
  ac:	20 40       	sbci	r18, 0x00	; 0
  ae:	30 40       	sbci	r19, 0x00	; 0
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x2a>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x34>
  b4:	00 00       	nop
		_delay_ms(500);
		//number two
		PORTD = 0b01101100;
  b6:	8c e6       	ldi	r24, 0x6C	; 108
  b8:	8b b9       	out	0x0b, r24	; 11
		PORTB = 0b00000001;
  ba:	81 e0       	ldi	r24, 0x01	; 1
  bc:	85 b9       	out	0x05, r24	; 5
  be:	9f ef       	ldi	r25, 0xFF	; 255
  c0:	29 e6       	ldi	r18, 0x69	; 105
  c2:	38 e1       	ldi	r19, 0x18	; 24
  c4:	91 50       	subi	r25, 0x01	; 1
  c6:	20 40       	sbci	r18, 0x00	; 0
  c8:	30 40       	sbci	r19, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x44>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x4e>
  ce:	00 00       	nop
		_delay_ms(500);
		//number three
		PORTD = 0b00111100;
  d0:	9c e3       	ldi	r25, 0x3C	; 60
  d2:	9b b9       	out	0x0b, r25	; 11
		PORTB = 0b00000001;
  d4:	85 b9       	out	0x05, r24	; 5
  d6:	9f ef       	ldi	r25, 0xFF	; 255
  d8:	29 e6       	ldi	r18, 0x69	; 105
  da:	38 e1       	ldi	r19, 0x18	; 24
  dc:	91 50       	subi	r25, 0x01	; 1
  de:	20 40       	sbci	r18, 0x00	; 0
  e0:	30 40       	sbci	r19, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x5c>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x66>
  e6:	00 00       	nop
		_delay_ms(500);
		//number four
		PORTD = 0b10011000;
  e8:	98 e9       	ldi	r25, 0x98	; 152
  ea:	9b b9       	out	0x0b, r25	; 11
		PORTB = 0b00000001;
  ec:	85 b9       	out	0x05, r24	; 5
  ee:	9f ef       	ldi	r25, 0xFF	; 255
  f0:	29 e6       	ldi	r18, 0x69	; 105
  f2:	38 e1       	ldi	r19, 0x18	; 24
  f4:	91 50       	subi	r25, 0x01	; 1
  f6:	20 40       	sbci	r18, 0x00	; 0
  f8:	30 40       	sbci	r19, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x74>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x7e>
  fe:	00 00       	nop
		_delay_ms(500);
		//number five
		PORTD = 0b10110100;
 100:	94 eb       	ldi	r25, 0xB4	; 180
 102:	9b b9       	out	0x0b, r25	; 11
		PORTB = 0b00000001;
 104:	85 b9       	out	0x05, r24	; 5
 106:	8f ef       	ldi	r24, 0xFF	; 255
 108:	99 e6       	ldi	r25, 0x69	; 105
 10a:	28 e1       	ldi	r18, 0x18	; 24
 10c:	81 50       	subi	r24, 0x01	; 1
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	20 40       	sbci	r18, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x8c>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x96>
 116:	00 00       	nop
 118:	b7 cf       	rjmp	.-146    	; 0x88 <main+0x8>

0000011a <_exit>:
 11a:	f8 94       	cli

0000011c <__stop_program>:
 11c:	ff cf       	rjmp	.-2      	; 0x11c <__stop_program>
